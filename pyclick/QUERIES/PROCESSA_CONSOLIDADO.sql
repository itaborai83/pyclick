-- DROP TABLE INCIDENTES_OVERRIDE
CREATE TABLE INCIDENTES_OVERRIDE(
	ID_CHAMADO						TEXT
,	CATEGORIA						TEXT
,	MESA							TEXT
,	PESO							INTEGER
,	SLA								INTEGER
,	DURACAO							INTEGER
,	ESTORNO							TEXT
,	OBSERVACAO						TEXT
,	PRIMARY KEY(ID_CHAMADO ASC)
);

-- DROP TABLE MESAS_N4_SAP
CREATE TABLE MESAS_N4_SAP(
	MESA							TEXT
,	PESO_DEFAULT					INTEGER
,	CONSIDERA_ULTIMA				TEXT
,	PRIMARY KEY(MESA ASC)
);

INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-ABAST_GE', 		 1, 'S');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-APOIO_OPERACAO', 	 1, 'S');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-CORPORATIVO',  	 1, 'S');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-FINANCAS', 		 1, 'S');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-GRC', 			 1, 'S');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-PORTAL', 			 1, 'S');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-SERVICOS', 		 1, 'S');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-ESCALADOS', 		30, 'N');
INSERT INTO MESAS_N4_SAP(MESA, PESO_DEFAULT, CONSIDERA_ULTIMA) VALUES('N4-SAP-SUSTENTACAO-PRIORIDADE', 		35, 'N');

-- DROP VIEW VW_STATUS_CHAMADO
CREATE VIEW VW_STATUS_CHAMADO AS
	SELECT	A.ID_CHAMADO 
	,		CASE	WHEN B.DATA_RESOLUCAO_CHAMADO IS NULL 	THEN 'EM ABERTO'
					WHEN A.ULTIMA_ACAO_NOME IN ('Encerrar') THEN 'ENCERRADO'
					WHEN A.ULTIMA_ACAO_NOME IN ('Cancelado') THEN 'CANCELADO'
					ELSE NULL
			END AS FOO 		
	FROM	INCIDENTE_ACOES AS A
			--
			INNER JOIN INCIDENTES AS B
			ON	A.ID_CHAMADO = B.ID_CHAMADO
			--
	WHERE	A.ID_ACAO IN ( SELECT MAX(ID_ACAO) AS MAX_ID_ACAO FROM INCIDENTE_ACOES GROUP BY ID_CHAMADO )
	ORDER 	BY A.ID_CHAMADO;
	
-- DROP VIEW VW_ULTIMAS_MESAS	
CREATE VIEW VW_ULTIMAS_MESAS AS 
	WITH ULTIMAS_ATRIBUICOES AS (
		SELECT	MAX(ID_ACAO) as MAX_ID_ACAO
		FROM	INCIDENTE_ACOES ia 
		WHERE	ULTIMA_ACAO_NOME = 'Atribuição interna'
		AND		ID_CHAMADO IN (SELECT ID_CHAMADO FROM INCIDENTES WHERE CATEGORIA_MAIOR <> 'Demandas Internas')
		AND		MESA NOT IN (
				    'A DEFINIR',
				    'Atendimento de RH',
				    'Mesa Padrão',
				    'SVD Manager Template',
				    'Usuários Finais',
				    'N4-SAP-SUSTENTACAO-PRIORIDADE',
				    'N4-SAP-SUSTENTACAO-ESCALADOS'
			    )
		GROUP	BY ID_CHAMADO
	)
	SELECT	ID_CHAMADO
	,		MESA
	FROM	INCIDENTE_ACOES
	WHERE	ID_ACAO IN (SELECT MAX_ID_ACAO FROM ULTIMAS_ATRIBUICOES)
	ORDER	BY ID_CHAMADO;
	
-- DROP VIEW VW_PESOS
CREATE VIEW VW_PESOS AS
	SELECT	A.ID_CHAMADO
	,		COALESCE(D.PESO_DEFAULT, 0) AS PESO
	FROM	(	
				SELECT	ID_CHAMADO
				,		MAX(ID_ACAO) as MAX_ID_ACAO
				FROM	INCIDENTE_ACOES ia 
				WHERE	ULTIMA_ACAO_NOME = 'Atribuição interna'
				AND		MESA NOT IN ( 'A DEFINIR', 'Atendimento de RH', 'Mesa Padrão', 'SVD Manager Template', 'Usuários Finais' )
				GROUP	BY ID_CHAMADO
			) AS A
			--
			INNER JOIN INCIDENTES AS B
			ON	A.ID_CHAMADO = B.ID_CHAMADO
			AND	B.CATEGORIA_MAIOR NOT IN ('Tarefa', 'Demandas Internas')
			--
			INNER JOIN INCIDENTE_ACOES AS C
			ON	A.ID_CHAMADO = C.ID_CHAMADO
			AND	A.MAX_ID_ACAO = C.ID_ACAO
			--
			LEFT OUTER JOIN MESAS_N4_SAP AS D
			ON C.MESA = D.MESA
			--
	ORDER	BY A.ID_CHAMADO;

-- DROP VIEW VW_CATEGORIAS
CREATE VIEW VW_CATEGORIAS AS
	SELECT	DISTINCT ID_CHAMADO
	,		CASE	WHEN CATEGORIA_MAIOR = 'Solicitações de Serviço'
					THEN 'REALIZAR'
					WHEN CATEGORIA_MAIOR = 'Incidentes' AND CATEGORIA LIKE '%CORRIGIR%'
					THEN 'CORRIGIR'
					WHEN CATEGORIA_MAIOR = 'Incidentes'
					THEN 'ORIENTAR'
	 		END AS CATEGORIA
	FROM	INCIDENTES AS A 
	WHERE	CATEGORIA_MAIOR NOT IN ('Tarefa', 'Demandas Internas')
	ORDER	BY A.ID_CHAMADO;

-- DROP VIEW VW_PRAZOS
CREATE VIEW VW_PRAZOS AS 
	SELECT	A.ID_CHAMADO
	,		B.CATEGORIA
	,		A.PESO
	,		CASE	WHEN A.PESO IN (1, 30) AND B.CATEGORIA = 'ORIENTAR' THEN 27 * 60
					WHEN A.PESO IN (1, 30) AND B.CATEGORIA = 'CORRIGIR' THEN 135 * 60
					WHEN A.PESO = 35 THEN 9 * 60
					WHEN B.CATEGORIA = 'REALIZAR' THEN C.PRAZO_OFERTA_M
					ELSE -999999999
			END AS PRAZO
	,		C.OFERTA_CATALOGO 
	FROM	VW_PESOS AS A
			--
			INNER JOIN VW_CATEGORIAS AS B
			ON A.ID_CHAMADO = B.ID_CHAMADO 
			--
			INNER JOIN INCIDENTES AS C
			ON A.ID_CHAMADO = C.ID_CHAMADO 
			--
	WHERE	CATEGORIA_MAIOR NOT IN ('Tarefa', 'Demandas Internas')
	AND		A.PESO > 0
	ORDER 	BY A.ID_CHAMADO;
	
-- DROP VIEW VW_DURACOES
CREATE VIEW VW_DURACOES AS 
	WITH DURACOES AS (
		SELECT	A.ID_CHAMADO
		,		A.CHAMADO_PAI
		,		A.CATEGORIA_MAIOR 
		,		SUM(CASE 	WHEN B.MESA = 'N4-SAP-SUSTENTACAO-PRIORIDADE'
							THEN (CASE WHEN C.MESA = 'N4-SAP-SUSTENTACAO-PRIORIDADE' THEN C.TEMPO_UTIL_ATRIBUICAO_MESA_M ELSE 0 END)
							WHEN B.MESA IN (SELECT MESA FROM MESAS_N4_SAP) 
							THEN C.TEMPO_UTIL_ATRIBUICAO_MESA_M ELSE 0 
				END) AS DURACAO
		FROM	INCIDENTES AS A
				--
				INNER JOIN VW_ULTIMAS_MESAS AS B
				ON 	A.ID_CHAMADO = B.ID_CHAMADO 
				AND B.MESA IN  (SELECT MESA FROM MESAS_N4_SAP)
				--
				INNER JOIN INCIDENTE_ACOES AS C
				ON	B.ID_CHAMADO = C.ID_CHAMADO
				AND B.MESA = C.MESA
				--
		WHERE	A.DATA_RESOLUCAO_CHAMADO IS NOT NULL
		AND		C.ULTIMA_ACAO_NOME = 'Atribuição interna'
		AND		C.TEMPO_UTIL_ATRIBUICAO_MESA_M IS NOT NULL
		GROUP	BY A.ID_CHAMADO
		,		A.CHAMADO_PAI
		,		A.CATEGORIA_MAIOR 
	),
	DURACOES_TAREFAS AS (
		SELECT 	CHAMADO_PAI AS ID_CHAMADO
		,		SUM(DURACAO) AS DURACAO
		FROM 	DURACOES 
		WHERE 	CHAMADO_PAI IS NOT NULL
		AND		ID_CHAMADO LIKE 'T%'
		GROUP	BY CHAMADO_PAI
	)
	SELECT	A.ID_CHAMADO
	,		SUM(A.DURACAO + COALESCE( (SELECT DURACAO FROM DURACOES_TAREFAS WHERE CHAMADO_PAI = A.ID_CHAMADO), 0)) AS DURACAO
	FROM	DURACOES AS A
	WHERE	A.CATEGORIA_MAIOR <> 'Tarefa'
	GROUP	BY A.ID_CHAMADO;

-- DROP VIEW VW_DADOS_MEDICAO 
CREATE VIEW VW_DADOS_MEDICAO AS 
	WITH DADOS AS (
		SELECT	A.ID_CHAMADO
		,		B.CATEGORIA 
		,		C.MESA
		,		D.PESO
		,		E.PRAZO
		,		F.DURACAO
		FROM	INCIDENTES AS A
				--
				LEFT OUTER JOIN VW_CATEGORIAS AS B NOT INDEXED
				ON	A.ID_CHAMADO = B.ID_CHAMADO
				--
				LEFT OUTER JOIN VW_ULTIMAS_MESAS AS C NOT INDEXED
				ON 	A.ID_CHAMADO = C.ID_CHAMADO
				--
				LEFT OUTER JOIN VW_PESOS AS D NOT INDEXED
				ON	A.ID_CHAMADO = D.ID_CHAMADO
				--
				LEFT OUTER JOIN VW_PRAZOS AS E NOT INDEXED
				ON	A.ID_CHAMADO = E.ID_CHAMADO
				--
				LEFT OUTER JOIN VW_DURACOES AS F NOT INDEXED
				ON	A.ID_CHAMADO = F.ID_CHAMADO
				--
		WHERE	A.ID_CHAMADO NOT LIKE 'T%'
		AND		A.ID_CHAMADO NOT IN (SELECT ID_CHAMADO FROM INCIDENTES_OVERRIDE WHERE ESTORNO = 'S')
		AND		A.DATA_RESOLUCAO_CHAMADO IS NOT NULL
		ORDER	BY A.ID_CHAMADO
	)
	SELECT	A.ID_CHAMADO
	,		COALESCE(B.CATEGORIA, A.CATEGORIA) AS CATEGORIA
	,		COALESCE(B.MESA, A.MESA) AS MESA
	,		COALESCE(B.PESO, A.PESO) AS PESO
	,		COALESCE(B.SLA, A.PRAZO) AS PRAZO
	,		COALESCE(B.DURACAO, A.DURACAO) AS DURACAO
	,		B.OBSERVACAO AS OBS_OVERRIDE
	FROM	DADOS AS A
			--
			LEFT OUTER JOIN INCIDENTES_OVERRIDE AS B
			ON 	A.ID_CHAMADO = B.ID_CHAMADO
			--
	ORDER	BY A.ID_CHAMADO;
	
-- DROP VIEW VW_DADOS_MEDICAO_FALTANDO
CREATE VIEW VW_DADOS_MEDICAO_FALTANDO AS 
	SELECT	*
	FROM	VW_DADOS_MEDICAO AS A
	WHERE	A.OBS_OVERRIDE IS NULL
	AND		A.MESA IS NULL OR MESA IN (SELECT MESA FROM MESAS_N4_SAP)
	AND		(CATEGORIA IS NULL OR MESA IS NULL OR PESO IS NULL OR PRAZO IS NULL OR DURACAO IS NULL)
	ORDER	BY ID_CHAMADO;

-- DROP VIEW VW_KPI_PRP
CREATE VIEW VW_KPI_PRP AS
	SELECT	SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) AS VIOLACOES
	,		COUNT(*) AS INCIDENTES
	,		SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END)/ COUNT(*) * 100.0 AS PRP 
	FROM	VW_DADOS_MEDICAO
	WHERE	PESO = 35;

-- DROP VIEW VW_KPI_PRO
CREATE VIEW VW_KPI_PRO AS
	SELECT	SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) AS VIOLACOES
	,		COUNT(*) AS INCIDENTES
	,		SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) / COUNT(*) * 100.0 AS PRO
	FROM	VW_DADOS_MEDICAO
	WHERE	PESO IN (1, 30)
	AND		CATEGORIA = 'ORIENTAR';
	
-- DROP VIEW VW_KPI_PRC
CREATE VIEW VW_KPI_PRC AS
	SELECT	SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) AS VIOLACOES
	,		COUNT(*) AS INCIDENTES
	,		SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) / COUNT(*) * 100.0 AS PRC
	FROM	VW_DADOS_MEDICAO
	WHERE	PESO IN (1, 30)
	AND		CATEGORIA = 'CORRIGIR';

-- DROP VIEW VW_KPI_PRS
CREATE VIEW VW_KPI_PRS AS
	SELECT	SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) AS VIOLACOES
	,		COUNT(*) AS INCIDENTES
	,		SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) / COUNT(*) * 100.0 AS PRS 
	FROM	VW_DADOS_MEDICAO
	WHERE	PESO IN (1, 30)
	AND		CATEGORIA = 'REALIZAR';
	
-- DROP VIEW VW_KPI_PRS_SIMPLES
CREATE VIEW VW_KPI_PRS_SIMPLES AS
	SELECT	SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) AS VIOLACOES
	,		COUNT(*) AS INCIDENTES
	,		SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) / COUNT(*) * 100.0 AS PRS_SIMPLES 
	FROM	VW_DADOS_MEDICAO
	WHERE	PESO IN (1, 30)
	AND		CATEGORIA = 'REALIZAR'
	AND		PRAZO = 45 * 60;

-- DROP VIEW VW_KPI_PRS_MEDIO
CREATE VIEW VW_KPI_PRS_MEDIO AS
	SELECT	SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) AS VIOLACOES
	,		COUNT(*) AS INCIDENTES
	,		SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) / COUNT(*) * 100.0 AS PRS_MEDIO 
	FROM	VW_DADOS_MEDICAO
	WHERE	PESO IN (1, 30)
	AND		CATEGORIA = 'REALIZAR'
	AND		PRAZO = 90 * 60;
	
-- DROP VIEW VW_KPI_PRS_COMPLEXO
CREATE VIEW VW_KPI_PRS_COMPLEXO AS
	SELECT	SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) AS VIOLACOES
	,		COUNT(*) AS INCIDENTES
	,		SUM(CASE WHEN DURACAO > PRAZO THEN 1.0 ELSE 0.0 END) / COUNT(*) * 100.0 AS PRS_COMPLEXO 
	FROM	VW_DADOS_MEDICAO
	WHERE	PESO IN (1, 30)
	AND		CATEGORIA = 'REALIZAR'
	AND		PRAZO = 180 * 60;

-- DROP VIEW VW_KPI_CRI
CREATE VIEW VW_KPI_CRI AS
	SELECT	SUM(CASE WHEN COALESCE(C.MESA, B.MESA) IN (SELECT MESA FROM MESAS_N4_SAP) AND A.DATA_RESOLUCAO_CHAMADO IS NOT NULL THEN 1 ELSE 0 END) AS QTD_TRATADOS
	,		SUM(CASE WHEN COALESCE(C.MESA, B.MESA) NOT IN (SELECT MESA FROM MESAS_N4_SAP) THEN 1 ELSE 0 END) AS QTD_ENCAMINHADOS -- PODE ESTAR EM ABERTO
	,		COUNT(*) AS QTD_RECEBIDOS
	,		(
				SUM(CASE WHEN COALESCE(C.MESA, B.MESA) IN (SELECT MESA FROM MESAS_N4_SAP) AND A.DATA_RESOLUCAO_CHAMADO IS NOT NULL THEN 1.0 ELSE 0.0 END)
			+ 	SUM(CASE WHEN COALESCE(C.MESA, B.MESA) NOT IN (SELECT MESA FROM MESAS_N4_SAP) THEN 1.0 ELSE 0.0 END)
			)
			/ COUNT(*) * 100.0 AS CRI 
	FROM	INCIDENTES AS A
			--
			INNER JOIN VW_ULTIMAS_MESAS AS B
			ON 	A.ID_CHAMADO = B.ID_CHAMADO
			--
			LEFT OUTER JOIN INCIDENTES_OVERRIDE AS C
			ON 	A.ID_CHAMADO = C.ID_CHAMADO
			--	
	WHERE	A.ID_CHAMADO NOT IN (SELECT ID_CHAMADO FROM INCIDENTES_OVERRIDE WHERE ESTORNO = 'S');